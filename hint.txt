COMPASS:
List is a listing service for all kind of items including movie, music, book, restaurant to help people's capinity. Capinity is a measurement of recognizable information at a time.

Simple over Rich
 -Few critical pages
 -Any actions by scroll
 -Stay minimal though you think you need more
 -High value / tap (One tap does good work)
 -Sequential over Structured
 -No color, just lines that reverage highreso display
Unique over Friendly
 -Experiece without login
 -Unusual color pattern
Cute over Cool
 -Color pattern from Grant Wood's
 -Use tangible symbols: not "like" but "cherry"
 -Tangle UI to intuitive grasp long list (Metaphor in function, User's eye fliction on edge of UI)
 -Tactile colors with Ultra Light Glass UI

-----------
TECHNICAL HINTS:
1. /app/views/users/show.html.erb asks variables (e.g. @user) to 
2. /app/controllers/users_controller.rb. Controller asks data (e.g. @user = User.find_by(:username => params[:username])) to /db/* or /config/routes.rb
3. /config/routes.rb routes requested URL, then return value to the controller
3. /db/* returns value

Database:
migration = create table
seed = structured data (e.g. for test dataset)

Rails Command:
- rails new list -> create new rails app named list
- rails g controller users index show -> create /app/views/users/show.html.erb, /app/views/users/index.html.erb and /app/controllers/users_controller.rb
- rails g model user name:strig username:string location:string about:text -> (create model) generetes migration file

- rake db:create
- rake db:migrate -> create table based on migration file (e.g. /db/migrate/20150117094006_create_users.rb)
- rake db:seed -> insert /db/seeds.rb data to database
- rails s -> run server

- rails detroy model (model name)
- rails g model (model name)
- rails db:migrate
- rails db:seed

-----
BluePrint:
tag has text and image

user is tag
"book" is tag

box input tag -> list
ex. box input meaue -> meaue's list
(here shows users personal page)
ex. box input book -> book list

make new item form below list

Imagerylisting:
Create list from image with arrayed pattern. Taking photo of restaurant menu, markets fruits, buidlings, Excel to list them with several possible pattern suggested. OCR is better. If not connecting to the real world, this service is meaningless.

List Style:
Sytles are provided to arrange and show list (e.g. Ranking, Collection, TODOLIST)

-----
TODO:
Generate tag
Secret tag
 List from image
 Log in
Stock game
List style
ajax
japanese analysis
image fit
good font
Heroku up

DONE:
Auto icon, tags from content
 Conect sensors
 Text input auto fill
 Content from url
Click stroke to url


-----
ISSUE:
1. How do we name things?
Tag is a common way to group items. However, a word often groups multiple words (e.g. Banana is a tag to a group of yellow, long, sweet fruit). In addition, Banana is supposed to be a stroke. So, tag and stroke is a kind of word which name things and make the real world recognizable. Names are given when they worthfuly devide multiple things (e.g. "Woman" and "Man" devide 6 billion people into two groups).

2. What is Capinity? How does it improve?
Capinity is a measurement of information value with a first gaze of something. One way of improving capinity of "text" is to insert related images. However, this conflict of listing compass which is "Simple over Rich". User need to know the context and can expect what comes next. Tag search is effective to show the context, on the other hand, a list with various kind of stroke is confusing. The feeling of "listing" is that the context of the list is very very narrow; "News" is too wide context, "Carl's favorite books" is a bit wide context, "x position of this coffee cup" is narrow context. However, "My favorite books" are narrow context because I have information about the list in advance.

4. Image recoginization design
Tagging elements in a image so that the informaiton entoropy effectively decreases by introducing that tagging.

-----
POSSIBLE FUNCTIONS:
*Be careful not to spoil compass
1. Sidebar Digest: As ref/sidebar.png, content details can be shown besides of the list
2. Dynamic list: A list stroke changes in 1 min so that users just turn on the pc and see it like TV.

-----
I want to list:
1. Movies I saw
2. My friends favorite movies
3. Food I ate
4. Site I went
5. 2ch good matome
6. Music (playlist of grooveshark) which I can play without visiting groove shark and see complex website.
7. FAQ from other user


-----
REFERENCE:
2次元パターンのランダムさを把握する脳内の視覚処理の仕組み - 九大など　http://news.mynavi.jp/news/2013/10/15/158/

RailsにTwitter Bootstrapの導入と簡易な使い方 http://ruby-rails.hatenadiary.com/entry/20140801/1406818800






